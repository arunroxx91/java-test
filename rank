import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;
import java.net.*;
import com.google.gson.*;

class Result {

    /*
     * Complete the 'getNumDraws' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER year as parameter.
     */

    public static int getNumDraws(int year) {
        int drawCount = 0;
        try{
            IntStream stream = IntStream.range(0, 11);
            stream.forEach(s->{
                 String ur   = "https://jsonmock.hackerrank.com/api/football_matches?year=" +year+"&team2goals="+s+"&team1goals="+s;
                 System.out.println(ur);
            //      URL a = new URL(ur);
            // HttpURLConnection b = (HttpURLConnection) a.openConnection();
            // b.setRequestMethod("GET");
            });
            String urlStr   = "https://jsonmock.hackerrank.com/api/football_matches?year=" +year+"&page=1";
        //     URL ur = new URL(urls);
        // HttpURLConnection conn = (HttpURLConnection) ur.openConnection();
        // conn.setRequestMethod("GET");
        // BufferedReader n = new BufferedReader(new InputStreamReader(conn.getInputStream())) ;
       // System.out.println(n.readLine());
            URL url = new URL(urlStr);
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("GET");
         //   con.setRequestProperty("accept", "application/json");
            BufferedReader res = new BufferedReader(new InputStreamReader(con.getInputStream()));
            String str ;
           while((str = res.readLine()) != null){
               Gson gson = new Gson();
            System.out.println("str "+str);
            JsonParser parser = new JsonParser();
            JsonElement jsonElement = parser.parse(str);
            JsonObject jsonObject = jsonElement.getAsJsonObject();
            //JsonElement ele = gson.toJsonTree(str);
            //JsonObject json = ele.getAsJsonObject();
           String totalpage = jsonObject.get("total_pages").getAsString();
           Integer total = Integer.parseInt(totalpage);
           }
            
            
            // JSONObject json = new JSONObject(sb.toString());
            // Integer totalPages = json.getString("total_pages");
            //System.out.println(sb);
        }catch(MalformedURLException urlEx){
            System.out.println(urlEx);
        }catch(IOException ioEx){
            System.out.println(ioEx);
        }catch(Exception ex){
            System.out.println(ex);
        }
        
    return drawCount;
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int year = Integer.parseInt(bufferedReader.readLine().trim());

        int result = Result.getNumDraws(year);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
